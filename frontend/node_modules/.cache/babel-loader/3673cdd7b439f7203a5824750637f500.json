{"ast":null,"code":"import { FILTER_CARS } from \"../actions/action.constants\";\nconst initState = {\n  filteredCars: null\n};\nexport const filterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case FILTER_CARS:\n      const {\n        cars,\n        query\n      } = payload;\n      const rangeQuery = {\n        minCost: query.minCost || 0,\n        maxCost: query.maxCost || 3000000,\n        currency: query.currency,\n        minRelease: query.minRelease || 0,\n        maxRelease: query.maxRelease || new Date().getFullYear()\n      };\n      const filteredCars = cars.filter(car => {\n        return Object.entries(query).every(_ref => {\n          let [key, value] = _ref;\n          let condition = value && !key.includes(\"min\") && !key.includes(\"max\") && !key.includes(\"currency\");\n\n          if (condition) {\n            return car[key] === value;\n          }\n\n          return true;\n        });\n      });\n      const filteredCarsByRange = filteredCars.filter(car => {\n        var _car$price, _car$price2;\n\n        return parseInt((_car$price = car.price) === null || _car$price === void 0 ? void 0 : _car$price.cost) <= parseInt(rangeQuery.maxCost) && parseInt((_car$price2 = car.price) === null || _car$price2 === void 0 ? void 0 : _car$price2.cost) >= parseInt(rangeQuery.minCost) && (rangeQuery.currency ? car.price.currency === rangeQuery.currency.toLowerCase() : true) && parseInt(car.release) <= parseInt(rangeQuery.maxRelease) && parseInt(car.release) >= parseInt(rangeQuery.minRelease);\n      });\n      return { ...state,\n        filteredCars: filteredCarsByRange\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["FILTER_CARS","initState","filteredCars","filterReducer","state","action","type","payload","cars","query","rangeQuery","minCost","maxCost","currency","minRelease","maxRelease","Date","getFullYear","filter","car","Object","entries","every","key","value","condition","includes","filteredCarsByRange","parseInt","price","cost","toLowerCase","release"],"sources":["C:/Users/ASUS/Documents/Car-trade-app/frontend/src/Global/reducers/filterReducer.js"],"sourcesContent":["import { FILTER_CARS } from \"../actions/action.constants\";\r\n\r\nconst initState = {\r\n  filteredCars: null,\r\n};\r\n\r\nexport const filterReducer = (state = initState, action) => {\r\n    const { type, payload } = action;\r\n   \r\n    \r\n  switch (type) {\r\n      case FILTER_CARS:\r\n           const { cars, query } = payload;\r\n           const rangeQuery = {\r\n             minCost: query.minCost || 0,\r\n             maxCost: query.maxCost || 3000000,\r\n             currency: query.currency,\r\n             minRelease: query.minRelease || 0,\r\n             maxRelease: query.maxRelease || new Date().getFullYear(),\r\n           };\r\n           const filteredCars = cars.filter((car) => {\r\n             return Object.entries(query).every(([key, value]) => {\r\n               let condition =\r\n                 value &&\r\n                 !key.includes(\"min\") &&\r\n                 !key.includes(\"max\") &&\r\n                 !key.includes(\"currency\");\r\n               if (condition) {\r\n                 return car[key] === value;\r\n               }\r\n               return true;\r\n             });\r\n           });\r\n             const filteredCarsByRange = filteredCars.filter((car) => {\r\n               return (\r\n                 parseInt(car.price?.cost) <= parseInt(rangeQuery.maxCost) &&\r\n                 parseInt(car.price?.cost) >= parseInt(rangeQuery.minCost) &&\r\n                 (rangeQuery.currency\r\n                   ? car.price.currency === rangeQuery.currency.toLowerCase()\r\n                   : true) &&\r\n                 parseInt(car.release) <= parseInt(rangeQuery.maxRelease) &&\r\n                 parseInt(car.release) >= parseInt(rangeQuery.minRelease)\r\n               );\r\n             });\r\n      return { ...state, filteredCars: filteredCarsByRange };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,6BAA5B;AAEA,MAAMC,SAAS,GAAG;EAChBC,YAAY,EAAE;AADE,CAAlB;AAIA,OAAO,MAAMC,aAAa,GAAG,YAA+B;EAAA,IAA9BC,KAA8B,uEAAtBH,SAAsB;EAAA,IAAXI,MAAW;EACxD,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EAGF,QAAQC,IAAR;IACI,KAAKN,WAAL;MACK,MAAM;QAAEQ,IAAF;QAAQC;MAAR,IAAkBF,OAAxB;MACA,MAAMG,UAAU,GAAG;QACjBC,OAAO,EAAEF,KAAK,CAACE,OAAN,IAAiB,CADT;QAEjBC,OAAO,EAAEH,KAAK,CAACG,OAAN,IAAiB,OAFT;QAGjBC,QAAQ,EAAEJ,KAAK,CAACI,QAHC;QAIjBC,UAAU,EAAEL,KAAK,CAACK,UAAN,IAAoB,CAJf;QAKjBC,UAAU,EAAEN,KAAK,CAACM,UAAN,IAAoB,IAAIC,IAAJ,GAAWC,WAAX;MALf,CAAnB;MAOA,MAAMf,YAAY,GAAGM,IAAI,CAACU,MAAL,CAAaC,GAAD,IAAS;QACxC,OAAOC,MAAM,CAACC,OAAP,CAAeZ,KAAf,EAAsBa,KAAtB,CAA4B,QAAkB;UAAA,IAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB;UACnD,IAAIC,SAAS,GACXD,KAAK,IACL,CAACD,GAAG,CAACG,QAAJ,CAAa,KAAb,CADD,IAEA,CAACH,GAAG,CAACG,QAAJ,CAAa,KAAb,CAFD,IAGA,CAACH,GAAG,CAACG,QAAJ,CAAa,UAAb,CAJH;;UAKA,IAAID,SAAJ,EAAe;YACb,OAAON,GAAG,CAACI,GAAD,CAAH,KAAaC,KAApB;UACD;;UACD,OAAO,IAAP;QACD,CAVM,CAAP;MAWD,CAZoB,CAArB;MAaE,MAAMG,mBAAmB,GAAGzB,YAAY,CAACgB,MAAb,CAAqBC,GAAD,IAAS;QAAA;;QACvD,OACES,QAAQ,eAACT,GAAG,CAACU,KAAL,+CAAC,WAAWC,IAAZ,CAAR,IAA6BF,QAAQ,CAAClB,UAAU,CAACE,OAAZ,CAArC,IACAgB,QAAQ,gBAACT,GAAG,CAACU,KAAL,gDAAC,YAAWC,IAAZ,CAAR,IAA6BF,QAAQ,CAAClB,UAAU,CAACC,OAAZ,CADrC,KAECD,UAAU,CAACG,QAAX,GACGM,GAAG,CAACU,KAAJ,CAAUhB,QAAV,KAAuBH,UAAU,CAACG,QAAX,CAAoBkB,WAApB,EAD1B,GAEG,IAJJ,KAKAH,QAAQ,CAACT,GAAG,CAACa,OAAL,CAAR,IAAyBJ,QAAQ,CAAClB,UAAU,CAACK,UAAZ,CALjC,IAMAa,QAAQ,CAACT,GAAG,CAACa,OAAL,CAAR,IAAyBJ,QAAQ,CAAClB,UAAU,CAACI,UAAZ,CAPnC;MASD,CAV2B,CAA5B;MAWP,OAAO,EAAE,GAAGV,KAAL;QAAYF,YAAY,EAAEyB;MAA1B,CAAP;;IAEF;MACE,OAAOvB,KAAP;EArCJ;AAuCD,CA3CM"},"metadata":{},"sourceType":"module"}